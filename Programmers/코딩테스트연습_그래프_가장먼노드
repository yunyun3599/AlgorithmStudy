import java.util.*;
class Solution {
    public int solution(int n, int[][] edge) {
        int answer = 0;
        
        boolean visited[] = new boolean[n+1];
        ArrayList<Integer> connected[] = new ArrayList[n+1];
        for(int i=0; i<n+1; i++) connected[i] = new ArrayList<>();
        for(int i=0; i<edge.length; i++) {
            int[] tmp = edge[i];
            connected[tmp[0]].add(tmp[1]);
            connected[tmp[1]].add(tmp[0]);
        }
        Queue<Integer> queue = new LinkedList<>();
        queue.add(1);
        visited[1] = true;
        while(!queue.isEmpty()) {
            int size = queue.size();
            answer = size;
            for(int i = 0; i< size; i++) {
                int num = queue.poll();
                for(Integer next : connected[num]) {
                    if(!visited[next]){
                        queue.add(next);
                        visited[next] = true;
                    }
                }
            }
        }
        return answer;
    }
}
